
#puts deployment.to_yaml

#puts deployment.methods.sort
#puts deployment.params.to_json
#puts deployment.to_yaml
#my_servers = deployment.servers
# my_servers.each { |s| puts s.to_s }
 
#puts my_servers.to_s

#gem install rest_connection
#gem install activesupport


if params
  data = XmlSimple.xml_in(JSON.parse(deployment.params.to_json).to_xml(:root => 'deployment', :skip_instruct => true))
  output = String.new
  output << data['href'].key
  output << ' "'+data['nickname'].to_s+'"'
  output << ' "'+data['description'].to_s+'"'
  output << ' "'+data['created-at'].to_s+'"'
  output << ' "'+data['updated-at'].to_s+'"'
  output << ' "'+data['default-availability-zone'].to_s+'"'
  puts output
  #puts deployment.find_all.to_yaml
  #data.each do |k,v|
#    output << v.to_s+' '
#  end
  
#  data.sort.each do |k, v|
#    if k
#      if String(v)
#        output << '"'+v.to_s+'" '
#      end
##    end
#    #output << v
#  end
#  puts output
  exit
end


#exe = Executable.new(:href => right_script.href)
#state = server.run_executable(exe)
#state.wait_for_completed


#st = ServerTemplate.find(server.server_template_href)
#connect_script = st.executables.detect { |ex| ex.name =~ /SYS Monitoring Binary Heartbeat Monitor Add/i }
#state = server.run_executable(connect_script)
#state.wait_for_completed



#ebs_volumes = Ec2EbsVolume.find_all()
#puts ebs_volumes
#ebs_volumes.each {|volume|
#  puts volume.to_yaml
#}


#@exec_metadata[exec.position] ||= {} # Create a sub-hash unless it already exists
#@exec_metadata[exec.position][exec.position] ||= []
#@exec_metadata[exec.position][exec.position] << exec
 
#puts "#{exec.position}  #{exec.recipe}  #{exec.name}  #{exec.description}  #{exec.href}  #{exec.created_at}  #{exec.updated_at}  #{exec.is_head_version}  #{exec.version}  #{exec.apply}"


#exec_metadata['filename'] = sanitize_filename(executable.name).gsub(' ', '_') if executable.name
#exec_metadata['position'] = executable.position
#exec_metadata['recipe'] = e xecutable.recipe
#exec_metadata['name'] = executable.name
#exec_metadata['description'] = executable.description
#puts exec_metadata if verbose

#puts "#{executable.position}  #{executable.recipe?executable.recipe:"*"}  #{executable.name}  #{executable.description?executable.description:"*"}  #{executable.href}  #{executable.created_at}  #{executable.updated_at}  #{executable.is_head_version}  #{executable.version}  #{executable.apply}"

#script_version = script['version']
#puts "#{script.name}_#{script_version}_#{script.description}"
#script_version = 'HEAD' if script.is_head_version == 'true'
#puts script_filename+'_'+script_version


#puts @exec_metadata.to_yaml if verbose
#@exec_metadata.each do |exec|
#  puts "#{exec['name']}"
#  #puts "  #{exec.recipe}  #{exec.name}  #{exec.description}  #{exec.href}  #{exec.created_at}  #{exec.updated_at}  #{exec.is_head_version}  #{exec.version}  #{exec.apply}"
#end