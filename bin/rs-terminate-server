#!/usr/bin/ruby

# rs-terminate-server

require 'getoptlong'

def usage
  puts("usage:  rs-terminate-server [--name <server_nickname> | --id <server_id>]")
  puts("           [[--verbose]]")
end

def usage_exit
  usage; exit
end

def help
  usage
  puts ''
  puts 'Terminates a RightScale server.'
  puts ''
  puts "examples:  rs-terminate-server --name 'Sandbox'"
  puts ''
  exit
end

opts = GetoptLong.new(
  [ '--name', '-n', GetoptLong::OPTIONAL_ARGUMENT ],
  [ '--id', '-i', GetoptLong::OPTIONAL_ARGUMENT ],
  [ '--help', '-h', GetoptLong::OPTIONAL_ARGUMENT ],
  [ '--verbose', '-v', GetoptLong::OPTIONAL_ARGUMENT ],
  [ '--decomm', '-d', GetoptLong::OPTIONAL_ARGUMENT ]
)

server_name = false
decommission = false
term_self = false
server_id = false
show_help = false
verbose = false

opts.each do |opt, arg|
  case opt
    when '--name'
      server_name = arg
    when '--decomm'
      decommission = arg
     when '--id'
      server_id = arg
    when '--help'
      show_help = true
	  when '--verbose'
      verbose = true
  end
end

help if show_help

usage_exit if !(server_name || server_id || decommission)

require 'rubygems'

# get server
if server_name || server_id
  require 'json'
  require 'rest_connection'
  if server_name
    puts "Finding server: '%#{server_name}%'"
    server = Server.find(:first) { |s| s.nickname =~ /#{server_name}/ }
    puts "Found server, '#{server.nickname}'."
    puts server.to_yaml if verbose
  elsif server_id
    server = Server.find(server_id.to_i)
  end
  # terminate server
  puts "Terminating server, '#{server.nickname}'."
  server.stop()
  exit
end

if decommission
  if File.exist?("/etc/init.d/rightlink")
    puts 'Decommissioning self.'
    system('sleep 3; service rightlink decommission && shutdown -h now &')
    #puts `shutdown -h now`
  else
    puts 'RightLink init.d script does not exist, exiting.'
    exit
  end
  exit
end